name: Test

on:
  pull_request:
    types: [synchronize]
  pull_request_review:
    types: [submitted]

jobs:
  check-reviews:
    runs-on: ubuntu-latest
    outputs:
      reviews: ${{ steps.reviews.outputs.state }}
    steps:
      - id: reviews
        env:
          pr: ${{ github.event.number }}
        run: |
          state=$(gh pr view "$pr" \
              --repo "$GITHUB_REPOSITORY" 
              --json reviewDecision \
              --jq '.reviewDecision')
          echo "state=$state" >> "$GITHUB_OUTPUT"
  filter:
    runs-on: ubuntu-latest
    needs: check-reviews
    if: needs.check-reviews.event.review.state == 'APPROVED'
    steps:
      - run: |
          cat << OBJECT
          ${{ toJson(github) }}
          OBJECT
